---
apiVersion: v1
kind: Namespace
metadata:
  name:  demo-config-map-pod

---
apiVersion: v1
kind: Pod
metadata:
  name: demo-config-map-pod-env-manifest
  namespace: demo-config-map-pod
spec:
  containers:
  - name: demo-config-map-pod-env-manifest
    image: k8s.gcr.io/busybox
    command: [ "/bin/sh", "-c", "echo $(GREETING) $(HONORIFIC) $(NAME)" ]
    env:
    - name: GREETING
      value: "Warm greetings to"
    - name: HONORIFIC
      value: "The Most Honorable"
    - name: NAME
      value: "Kubernetes"
  restartPolicy: Never

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-from-file
  namespace: demo-config-map-pod
data:
  app.properties: |
    database-name=example-db
    database-port=3306
    debug="true"
  ui.properties: |
    version=0.02
    error-reporting="true"
    warning-color=red

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-env-file
  namespace: demo-config-map-pod
data:
  database-name: example-db
  database-port: "3306"
  debug: '"true"'


---
apiVersion: v1
kind: Pod
metadata:
  name: app-config-env-pod
  namespace: demo-config-map-pod
spec:
  containers:
    - name: app-config-env
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "env" ]
      env:
        - name: DATABASE-NAME
          valueFrom:
            configMapKeyRef:
              name: app-config-env-file
              key: database-name
  restartPolicy: Never

---
apiVersion: v1
kind: Pod
metadata:
  name: app-config-env-pod-2
  namespace: demo-config-map-pod
spec:
  containers:
    - name: app-config-env
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "env" ]
      env:
        - name: DATABASE-NAME
          valueFrom:
            configMapKeyRef:
              name: app-config-env-file
              key: database-name
        - name: DATABASE-PORT
          valueFrom:
            configMapKeyRef:
              name: app-config-env-file
              key: database-port
  restartPolicy: Never

---
apiVersion: v1
kind: Pod
metadata:
  name: app-config-env-pod-3
  namespace: demo-config-map-pod
spec:
  containers:
    - name: app-config-env
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "env" ]
      envFrom:
      - configMapRef:
          name: app-config-env-file
  restartPolicy: Never

---
apiVersion: v1
kind: Pod
metadata:
  name: app-config-env-pod-4
  namespace: demo-config-map-pod
spec:
  containers:
    - name: app-config-env
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "echo $(DATABASE-NAME) $(DATABASE-PORT)" ]
      env:
        - name: DATABASE-NAME
          valueFrom:
            configMapKeyRef:
              name: app-config-env-file
              key: database-name
        - name: DATABASE-PORT
          valueFrom:
            configMapKeyRef:
              name: app-config-env-file
              key: database-port
  restartPolicy: Never


---
apiVersion: v1
kind: Pod
metadata:
  name: app-config-env-pod-5
  namespace: demo-config-map-pod
spec:
  containers:
    - name: app-config-volume
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "ls /etc/config/" ]
      volumeMounts:
      - name: config-volume
        mountPath: /etc/config
  volumes:
    - name: config-volume
      configMap:
        name: app-config-from-file
  restartPolicy: Never

---
apiVersion: v1
kind: Pod
metadata:
  name: app-config-env-pod-6
  namespace: demo-config-map-pod
spec:
  containers:
    - name: app-config-volume
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh","-c","cat /etc/config/keys" ]
      volumeMounts:
      - name: config-volume
        mountPath: /etc/config
  volumes:
    - name: config-volume
      configMap:
        name: app-config-from-file
        items:
        - key: app.properties
          path: keys
  restartPolicy: Never
